apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        applicationId "com.udacity.gradle.builditbigger"
        minSdkVersion 17
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        multiDexEnabled = true

        //testInstrumentationRunner "android.test.InstrumentationTestRunner"
        //testHandleProfiling true
        //testFunctionalTest true
    }

    productFlavors {
        free {
            applicationId "com.udacity.gradle.builditbigger.free"
        }
        paid {
            applicationId "com.udacity.gradle.builditbigger.paid"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':androidJokes')
    compile 'com.android.support:appcompat-v7:23.0.1'
    freeCompile 'com.google.android.gms:play-services:8.1.0'
    compile project(path: ':backend', configuration: 'android-endpoints')
}

sourceSets {
    main {
        java {
            srcDirs = ["src"]
            exclude "**/androidTest/**"
        }
    }
    unitTest {
            java {
                srcDirs = ["src"]
                include "**/androidTest/**"
                include "**/EndpointsAsyncTask.java"
            }
    }
}

dependencies {
    //unitTestCompile files("$project.buildDir/classes/debug")
    unitTestCompile 'com.google.android:android-test:4.1.1.4'
    unitTestCompile 'junit:junit:4.11'
    unitTestCompile project(path: ':backend', configuration: 'android-endpoints')
/*
    unitTestCompile 'com.android.support.test.espresso:espresso-core:2.0'
    unitTestCompile 'com.android.support.test:testing-support-lib:0.1'
    unitTestCompile ('com.android.support.test.espresso:espresso-contrib:2.0') {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }*/
}
/*
configurations {
    unitTestCompile.extendsFrom runtime
    unitTestRuntime.extendsFrom unitTestCompile
}*/

task unitTest(type:Test, dependsOn: [":backend:startServer"]) {
    finalizedBy ":backend:stopServer"
    description = "run unit tests"
    testClassesDir = project.sourceSets.unitTest.output.classesDir
    classpath = project.sourceSets.unitTest.runtimeClasspath
    getReports().getJunitXml().setOutputPerTestCase(true)
    afterTest { desc, result ->
        println "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
}




